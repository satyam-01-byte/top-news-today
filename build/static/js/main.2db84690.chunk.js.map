{"version":3,"sources":["components/News.js","App.js","index.js"],"names":["UseEffectFetchData","useState","news","setNews","isLoading","setIsLoading","isError","setIsError","country","setCountry","link","process","url","setUrl","getNews","a","fetch","response","status","json","articles","countrynews","useEffect","length","className","href","id","onClick","map","item","index","title","urlToImage","description","source","author","src","alt","updatedNews","filter","user","removeNews","App","News","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA6ReA,EAzRY,WAAO,IAAD,EACPC,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,OAEGF,oBAAS,GAFZ,mBAExBG,EAFwB,KAEbC,EAFa,OAGDJ,oBAAS,GAHR,mBAGxBK,EAHwB,KAGfC,EAHe,OAIDN,mBAAS,MAJR,mBAIxBO,EAJwB,KAIfC,EAJe,KAMzBC,EACJ,sDAA+CF,EAA/C,YACAG,mCAR6B,EAUTV,mBAASS,GAVA,mBAUxBE,EAVwB,KAUnBC,EAVmB,KAiBzBC,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAAMJ,GADf,WACRK,EADQ,QAECC,QAAU,KAAOD,EAASC,OAAS,IAFpC,gBAGZb,GAAa,GACbE,GAAW,GAJC,wCAMOU,EAASE,OANhB,QAMNjB,EANM,OAOZC,EAAQD,EAAKkB,UACbf,GAAa,GARD,4CAAH,qDAaPgB,EAAW,uCAAG,WAAOb,GAAP,SAAAO,EAAA,sDAClBN,EAAWD,GACXK,EACE,sDAA+CL,EAA/C,YACEG,oCAEJG,IANkB,2CAAH,sDAajB,OAJAQ,qBAAU,WACRR,OAGEV,EAEA,8BACE,8CAKFE,EAEA,8BACE,4CAKFJ,EAAKqB,OAAS,EAEd,sBAAKC,UAAU,QAAf,UACE,gDACA,mBAAGC,KAAK,qBAAR,0BACA,iCACE,4DAON,mCACE,sBAAKC,GAAG,iBAAR,UACE,gDACA,sBAAKF,UAAU,YAAf,UACE,6BACE,4CAEF,wBAAQA,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,uBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,uBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,sBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,mBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,sBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,kBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,mBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,uBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,uBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,mBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,mBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,mBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,uBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,sBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,yBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,yBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,yBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,sBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,0BAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,uBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,sBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,sBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,0BAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,yBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,yBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,sBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,oBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,iBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,gBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,qBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,iBAGA,wBAAQG,UAAU,UAAUG,QAAS,kBAAMN,EAAY,OAAvD,0BAIF,qBAAKG,UAAU,UAAf,SACGtB,EAAK0B,KAAI,SAACC,EAAMC,GAAW,IAExBC,EAMEF,EANFE,MACAC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,YACArB,EAGEiB,EAHFjB,IACAsB,EAEEL,EAFFK,OACAC,EACEN,EADFM,OAEF,OACE,sBAAKX,UAAU,QAAf,UACE,qBAAKY,IAAKJ,EAAYK,IAAI,KAC1B,6BACE,mBAAGZ,KAAMb,EAAT,SAAemB,MAEjB,8BACGE,EACD,mBAAGR,KAAMb,EAAT,2BAEF,sBAAKY,UAAU,SAAf,UACE,4BAAIU,EAAOR,KACX,4BAAIS,OAEN,wBAAQX,UAAU,MAAMG,QAAS,kBA9P5B,SAACI,GAClB,IAAIO,EAAcpC,EAAKqC,QAAO,SAACC,GAAD,OAAUA,EAAKT,QAAUA,KACvD5B,EAAQmC,GA4P2CG,CAAWV,IAAlD,8BAb0BD,QAoBlC,iCACE,+DC5QKY,MARf,WACE,OACE,mCACE,cAACC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2db84690.chunk.js","sourcesContent":["//if you want to improve add interactive filters such as country, category, specific title\n\nimport React, { useState, useEffect } from \"react\";\n\nconst UseEffectFetchData = () => {\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [country, setCountry] = useState(\"in\");\n\n  const link =\n    `http://newsapi.org/v2/top-headlines?country=${country}&apiKey=` +\n    process.env.REACT_APP_API_KEY;\n\n  const [url, setUrl] = useState(link);\n\n  const removeNews = (title) => {\n    let updatedNews = news.filter((user) => user.title !== title);\n    setNews(updatedNews);\n  };\n\n  const getNews = async () => {\n    const response = await fetch(url);\n    if (!(response.status >= 200 && response.status < 300)) {\n      setIsLoading(false);\n      setIsError(true);\n    } else {\n      const news = await response.json();\n      setNews(news.articles);\n      setIsLoading(false);\n    }\n    // console.log(users);\n  };\n\n  const countrynews = async (country) => {\n    setCountry(country);\n    setUrl(\n      `http://newsapi.org/v2/top-headlines?country=${country}&apiKey=` +\n        process.env.REACT_APP_API_KEY\n    );\n    getNews();\n  };\n\n  useEffect(() => {\n    getNews();\n  });\n\n  if (isLoading) {\n    return (\n      <div>\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n\n  if (isError) {\n    return (\n      <div>\n        <h1>Error...</h1>\n      </div>\n    );\n  }\n\n  if (news.length < 1) {\n    return (\n      <div className=\"empty\">\n        <h1>Top News Today</h1>\n        <a href=\"/public/index.html\">Refresh News</a>\n        <footer>\n          <h3>API used: newsapi.org</h3>\n        </footer>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div id=\"page-container\">\n        <h1>Top News Today</h1>\n        <div className=\"countries\">\n          <h3>\n            <b>Country: </b>\n          </h3>\n          <button className=\"country\" onClick={() => countrynews(\"ar\")}>\n            Argentina\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"at\")}>\n            Austria\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"au\")}>\n            Australia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"be\")}>\n            Belgium\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"bg\")}>\n            Bulgaria\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"br\")}>\n            Brazil\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ca\")}>\n            Canada\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"cn\")}>\n            China\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"co\")}>\n            Colombia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"cu\")}>\n            Cuba\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"cz\")}>\n            Czechia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"eg\")}>\n            Egypt\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"fr\")}>\n            France\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"de\")}>\n            Germany\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"gr\")}>\n            Greece\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"hk\")}>\n            Hong Kong\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"hu\")}>\n            Hungary\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"id\")}>\n            Indonesia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ie\")}>\n            Ireland\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"il\")}>\n            Israel\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"in\")}>\n            India\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"it\")}>\n            Italy\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"jp\")}>\n            Japan\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"lt\")}>\n            Lithuania\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"lv\")}>\n            Latvia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ma\")}>\n            Morocco\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"mx\")}>\n            Mexico\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"my\")}>\n            Malaysia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ng\")}>\n            Nigeria\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"nl\")}>\n            Netherlands\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"no\")}>\n            Norway\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"nz\")}>\n            New Zealand\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ph\")}>\n            Philippines\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"pl\")}>\n            Poland\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"pt\")}>\n            Portugal\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ro\")}>\n            Romania\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ru\")}>\n            Russia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"sa\")}>\n            Saudi Arabia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"rs\")}>\n            Serbia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"sg\")}>\n            Singapore\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"si\")}>\n            Slovenia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"sk\")}>\n            Slovakia\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"za\")}>\n            South Africa\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"kr\")}>\n            South Korea\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"se\")}>\n            Sweden\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ch\")}>\n            Switzerland\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"th\")}>\n            Thailand\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"tr\")}>\n            Turkey\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"tw\")}>\n            Taiwan\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ae\")}>\n            UAE\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"gb\")}>\n            UK\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ua\")}>\n            Ukraine\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"us\")}>\n            USA\n          </button>\n          <button className=\"country\" onClick={() => countrynews(\"ve\")}>\n            Venezuela\n          </button>\n        </div>\n        <div className=\"topnews\">\n          {news.map((item, index) => {\n            const {\n              title,\n              urlToImage,\n              description,\n              url,\n              source,\n              author,\n            } = item;\n            return (\n              <div className=\"brief\" key={index}>\n                <img src={urlToImage} alt=\"\" />\n                <h4>\n                  <a href={url}>{title}</a>\n                </h4>\n                <p>\n                  {description}\n                  <a href={url}> Read more</a>\n                </p>\n                <div className=\"source\">\n                  <p>{source.id}</p>\n                  <p>{author}</p>\n                </div>\n                <button className=\"btn\" onClick={() => removeNews(title)}>\n                  Not Interested\n                </button>\n              </div>\n            );\n          })}\n        </div>\n        <footer>\n          <h3>API used: newsapi.org</h3>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default UseEffectFetchData;\n","import News from \"./components/News\";\n\nfunction App() {\n  return (\n    <>\n      <News />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}